#!/usr/bin/make -f
#
# (C) 2002-2003 Roland Rosenfeld <roland@debian.org>, based on
# Sample debian/rules that uses debhelper.
# This file is public domain software, originally written by Joey Hess. 

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

DEBDIR=`pwd`/debian/privoxy

OPTIMIZE=
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
        OPTIMIZE=-O0
else
        OPTIMIZE=-O2
endif

configure: configure-stamp
configure-stamp:
	dh_testdir

	autoheader
	autoconf
	env CFLAGS="$(OPTIMIZE) -g" \
		./configure --prefix=/usr --sysconfdir=/etc \
		--mandir=/usr/share/man	$(WITHDEBUG) \
		--with-docbook=/usr/share/sgml/docbook/stylesheet/dsssl/modular

	touch configure-stamp

build: build-stamp
build-stamp: configure-stamp 
	dh_testdir

#	backup formatted upstream documentation:
	for x in source text webserver pdf; do \
		if [ ! -d doc/$$x.dist ]; then \
			cp -a doc/$$x doc/$$x.dist; \
		fi; \
	done
	for x in INSTALL README AUTHORS privoxy.1; do \
		if [ ! -f $$x.dist ]; then \
			cp -a $$x $$x.dist; \
		fi; \
	done

	$(MAKE)
	$(MAKE) dok-pdf
	$(MAKE) dok

# 	remove trailing whitespaces:
	for x in developer-manual user-manual faq; do \
		sed -e 's/[ 	]*$$//' < doc/text/$$x.txt > doc/text/$$x.nws;\
		mv -f doc/text/$$x.nws doc/text/$$x.txt; \
	done

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	-$(MAKE) clean
	-$(MAKE) distclean
	rm -f privoxy privoxy.8
	rm -f configure config.h GNUmakefile 

	rm -rf obj
	rm -f ActivityConsole.jar
	rm -f src/java/org/privoxy/activityconsole/*.class

#	restore formatted upstream documentation:
	for x in source text webserver pdf; do \
		if [ -d doc/$$x.dist ]; then \
			rm -rf doc/$$x; \
			mv doc/$$x.dist doc/$$x; \
		fi; \
	done
	for x in INSTALL README AUTHORS privoxy.1; do \
		if [ -f $$x.dist ]; then \
			rm -f $$x; \
			mv $$x.dist $$x; \
		fi; \
	done

	rm -f doc/source/ldp.dsl

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	install -m 0755 privoxy $(DEBDIR)/usr/sbin/privoxy

	sed -e 's/^\(\(trust\|proxy\)-info-url\|admin-address\)/#\1/'  \
	    -e 's/^\(enable-\(edit-actions\|remote-toggle\)\)[ 	]*1/\1 0/' \
	    -e 's#^confdir .*#confdir /etc/privoxy#' \
	    -e 's#^logdir .*#logdir /var/log/privoxy#' \
	    -e 's%^#\(user-manual\).*%\1 /usr/share/doc/privoxy/user-manual%' \
	    -e 's/\(Sample Configuration File for Privoxy\).*/\1/' \
	    -e 's/Id: config,v.*/Id: config,v $$/' \
	    -e 's/ *$$//' \
		< config > $(DEBDIR)/etc/privoxy/config
	install -m 0644 default.action $(DEBDIR)/etc/privoxy/default.action
	install -m 0644 standard.action $(DEBDIR)/etc/privoxy/standard.action
	install -m 0644 user.action $(DEBDIR)/etc/privoxy/user.action
	install -m 0644 default.filter $(DEBDIR)/etc/privoxy/default.filter
	install -m 0644 trust $(DEBDIR)/etc/privoxy/trust

	sed -e 's/"1"/"8"/' < privoxy.1 > privoxy.8

	cp -r templates $(DEBDIR)/etc/privoxy/
	rm -f $(DEBDIR)/etc/privoxy/templates/*~
	rm -rf $(DEBDIR)/etc/privoxy/templates/CVS


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installdebconf	
	dh_installdocs -XCVS
	(cd $(DEBDIR)/usr/share/doc/privoxy/; \
	 mv privoxy-index.html index.html)
	dh_installexamples
	dh_installmenu
	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_installinit
	dh_installcron
	dh_installman
	dh_installinfo
#	dh_undocumented
	dh_installchangelogs ChangeLog
	dh_link
	dh_strip
	dh_compress -Xpdf
	dh_fixperms
#	dh_makeshlibs
	dh_installdeb
#	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
